digraph Querying {
  splines=ortho
  compound=true;

  begin[label="START"]
  end[label="END"]
  
  should_run[shape=diamond label="program is not paused"]
  CMD[shape=diamond label="ptdb subcmd"]

  subgraph cluster_CMD_Parse {   
    label=<<u>Parse Subcmd</u>>
    should_parse[shape=diamond label="has parser for cmd"]
    parse_cmd[shape=box label="Parse command data"]
    gen_db_dat[shape=box label="db_dat = gen_db_data()"]
    db_type_1[shape=diamond label="Database Type"]
    gql_enter[shape=box label="Send db_dat to GraphQL"]
    sql_enter[shape=box label="Send db_dat to SQL"]
    send_return[shape=hexagon label="print(Message + Ok(num_lines))"]

    should_parse -> parse_cmd [taillabel="yes "]
    parse_cmd -> gen_db_dat
    gen_db_dat -> db_type_1 
    db_type_1 -> {gql_enter [taillabel="GraphQL "] sql_enter [taillabel="SQL "]}
    { gql_enter sql_enter } -> send_return
  }

  subgraph cluster_CMD_Query { 
    label=<<u>Query Subcmd</u>>
    query_cmd[shape=box label="Query = query_struct(cmd_line_Args)"]
    db_type_2[shape=diamond label="Database Type"]
    gql_query[shape=box label="res = query_GQL(Query)"]
    sql_query[shape=box label="res = query_SQL(Query)"]
    gql_table[shape=box label="table = make_table(res)"]
    sql_table[shape=box label="table = make_table(res)"]
    print_table[shape=hexagon label="print(table)"]

    query_cmd -> db_type_2
    db_type_2 -> { gql_query [taillabel="GraphQL "] sql_query [taillabel="SQL "] }
    gql_query -> gql_table
    sql_query -> sql_table
    { gql_table sql_table } -> print_table
  }

  // subgraph cluster_CMD_Engagement {   
  //   label=<<u>Engagement Subcmd</u>>
  //   get_engagement_data[shape=box label="file = read_file(engagement_f)"]
  //   parse_toml[shape=box label="data = parse_Toml(file)"]
  //   print_engagement[shape=hexagon label="print(data)"]

  //   get_engagement_data -> parse_toml
  //   parse_toml -> print_engagement
  // }


  // outer graph connections
  begin -> should_run
  should_run -> CMD [taillabel="yes "]
  should_run -> end [taillabel="no "]
  
  // entries to subgraphs
  CMD -> should_parse [taillabel="parse "]
  CMD -> query_cmd [taillabel="query "]
  // CMD -> get_engagement_data [taillabel="engagement"]

  // exits from subgraphs
  should_parse -> end [taillabel="no "]
  send_return -> end
  print_table -> end
  // print_engagement -> end
}
