#!/usr/bin/bash
rm -f target/debug/ptdb
rm -f ~/.config/ptdb/engagement.toml
ln -s ~/.config/ptdb/engagements/SAMPLE-ENGAGEMENT.toml ~/.config/ptdb/engagement.toml

function cargo_exit {
    echo "ptdb failed to build!"
    exit 1
}

cargo +nightly update
cargo +nightly build || cargo_exit
PASSED="true"
FAILED_TEST=()
rm web_dirs-db-query.txt

echo "==================================="
echo " |  database => $DB_IP"
echo " |  target   => $TARGET_IP"
echo "==================================="

echo ""

# echo "==================================="
# echo "[LOG] scanning TARGET"
# echo "==================================="
# /usr/bin/nmap -n $TARGET_IP -p 5432
# echo "==================================="
# echo "[LOG] scan complete"
# echo "==================================="
# echo ""
# echo "==================================="
# echo "[LOG] scanning db"
# echo "==================================="
# /usr/bin/nmap -n $DB_IP -p 5432
# echo "==================================="
# echo "[LOG] scan complete"
# echo "==================================="

# echo ""

# make the docker database config file.
echo "host = \"$DB_IP\"" > ~/.config/ptdb/db-servers/docker.toml
echo "user = \"postgres\"" >> ~/.config/ptdb/db-servers/docker.toml
echo "passwd = \"postgres\"" >> ~/.config/ptdb/db-servers/docker.toml
echo "require_ssl = false" >> ~/.config/ptdb/db-servers/docker.toml
echo "db_type = \"SQL\"" >> ~/.config/ptdb/db-servers/docker.toml

PGPASSWORD=$psql_pass psql -U $psql_user -h $DB_IP -c "DROP DATABASE IF EXISTS $DB_NAME"';'
target/debug/ptdb engagement -a -n $DB_NAME -s docker.toml

echo "==================================="
echo "[LOG] gathering data..."
echo "==================================="

#############
# nmap data #
#############
echo "    [LOG] nmap scan 1"
echo "    >> nmap -n $TARGET_IP"
echo -n "    "
/usr/bin/nmap -n $TARGET_IP | target/debug/ptdb parse --exit-status $? --command "nmap -n $TARGET_IP"
echo "    [LOG] nmap scan 2"
echo "    >> nmap -n -sV $DB_IP"
echo -n "    "
/usr/bin/nmap -n -sV $DB_IP | target/debug/ptdb parse --exit-status $? --command "nmap -n -sV $DB_IP"

####################
# feroxbuster data #
####################
# feroxbuster -w $WORDLIST -u http://$TARGET_IP:8888 | target/debug/ptdb parse -q --exit-status $? --command "feroxbuster -w $WORDLIST -u http://$TARGET_IP:8888"

#################
# gobuster data #
#################
echo "    [LOG] gobuster dir scan"
echo "    >> gobuster -w $WORDLIST -u \"http://$TARGET_IP:8888\" dir 2>&1"
gobuster_out=$( gobuster -w $WORDLIST -u "http://$TARGET_IP:8888" dir 2>&1 )
ec=$?
echo "$gobuster_out"
echo "$gobuster_out" | target/debug/ptdb parse -q --exit-status $ec --command "gobuster -w $WORDLIST -u http://$TARGET_IP:8888 dir"

#################
# rustscan data #
#################
# rustscan -a $TARGET_IP | target/debug/ptdb parse -q --exit-status $? --command "rustscan -a $TARGET_IP"

echo "==================================="
echo "[LOG] data acquired ..."
echo "==================================="
echo ""
echo "==================================="
echo "[LOG] running data integrity checks"
echo "==================================="

##############
# ports test #
##############

echo "    [LOG] checking PORTS"
target/debug/ptdb query -q "SELECT * FROM ports;" > ports-db-query.txt
if [[ $( diff -adE ./tests/db-output/ports-sql.txt ports-db-query.txt ) ]]; then
    echo -e '\a'
    echo ">> diff -adE ./tests/db-output/ports-sql.txt ports-db-query.txt"
    diff -adE ./tests/db-output/ports-sql.txt ports-db-query.txt
    echo "    [LOG] PORTS test FAILED"
    FAILED_TEST=(${arrVar[@]} "ports-test")
    PASSED="false" 
else
    echo "    [LOG] PORTS test PASSED"
fi

################
# web_dir test #
################

echo "    [LOG] checking WEB_DIRS"
# target/debug/ptdb query -q "SELECT * FROM web_dirs;"
target/debug/ptdb query -q "SELECT * FROM web_dirs;" > web_dirs-db-query.txt  # ./tests/db-output/web_dirs-sql.txt  # 
if [[ $( diff -adE ./tests/db-output/web_dirs-sql.txt web_dirs-db-query.txt ) ]]; then
    echo -e '\a'
    echo ">> diff -adE ./tests/db-output/web_dirs-sql.txt web_dirs-db-query.txt"
    diff -adE ./tests/db-output/web_dirs-sql.txt web_dirs-db-query.txt
    echo "    [LOG] WEB_DIRS test FAILED"
    FAILED_TEST=(${arrVar[@]} "web-dirs-test")
    PASSED="false" 
else 
    echo "    [LOG] WEB_DIRS test PASSED"
fi 

echo "==================================="
echo "[LOG] done checking data integrity"
echo "==================================="


if [[ ( $PASSED == "true" ) ]]; then
    echo "[LOG] RESULT: PASSED"
    exit 0
else
    echo "[LOG] tests failed | $FAILED_TEST"
    echo "[LOG] RESULT: FAILED"
    exit 1
fi