-- functions
CREATE procedure add_machine(dns_name_in varchar default '', ip_in varchar default '', ipv6_in varchar default '', mac_adr_in varchar default '') 
-- RETURNS void
AS $$
DECLARE dns_name_id int;
DECLARE machine_id int;
BEGIN
    IF EXISTS ( SELECT id FROM dns_names WHERE dns_name = dns_name_in )
    THEN
        SELECT id INTO dns_name_id FROM dns_names WHERE dns_name = dns_name_in;
    ELSE
        IF ( dns_name_in != '' )
        THEN 
            INSERT INTO dns_names (dns_name) VALUES (dns_name_in);
            SELECT id INTO dns_name_id FROM dns_names WHERE dns_name = dns_name_in;
            -- dns_name_id := id.id;
            INSERT INTO hosts (dns_name_uid) VALUES (dns_name_id);
        ELSE
            SELECT NULL INTO dns_name_id;
        END IF;
    END if;

    IF EXISTS ( SELECT id FROM machines WHERE (machines.ip = ip_in AND ip_in != '') OR (machines.ipv6 = ipv6_in AND ipv6_in != '') OR (machines.mac_adr = mac_adr_in AND mac_adr_in != '') )
    THEN
        SELECT id INTO machine_id FROM machines WHERE (machines.ip = ip_in AND ip_in != '') OR (machines.ipv6 = ipv6_in AND ipv6_in != '') OR (machines.mac_adr = mac_adr_in AND mac_adr_in != '');
    ELSE
        INSERT INTO machines (ip, ipv6, mac_adr) VALUES (ip_in, ipv6_in, mac_adr_in);
        SELECT id INTO machine_id FROM machines WHERE (machines.ip = ip_in AND ip_in != '') OR (machines.ipv6 = ipv6_in AND ipv6_in != '') OR (machines.mac_adr = mac_adr_in AND mac_adr_in != '');
        -- machine_id := id;
        INSERT INTO hosts (machine_uid) VALUES (machine_id);
    END if;

    IF EXISTS ( SELECT id FROM dns_records WHERE dns_name_uid = dns_name_id AND machine_uid is NULL  )
    THEN
        -- raise notice 'updating dns_records.machine for ip: %', ip_in;
        UPDATE dns_records SET machine_uid = machine_id WHERE dns_name_uid = dns_name_id AND machine_uid is NULL;
    ELSEIF EXISTS ( SELECT id FROM dns_records WHERE dns_name_uid is NULL AND machine_uid = machine_id )
    THEN
        -- raise notice 'updating dns_records.dns_name_uid for ip: %', ip_in;
        UPDATE dns_records SET dns_name_uid = dns_name_id WHERE dns_name_uid is NULL AND machine_uid = machine_id;
    ELSE
        -- raise notice 'default for ip: %', ip_in;
        INSERT INTO dns_records (dns_name_uid, machine_uid) VALUES (dns_name_id, machine_id) ON CONFLICT DO NOTHING;
    END IF;
    -- RETURN dns_name_id;
END; $$
LANGUAGE plpgsql;

-- clear tables
DELETE FROM hosts;
DELETE FROM dns_records;
DELETE FROM cnames;
DELETE FROM machines;
DELETE FROM dns_names;

-- tests
CALL add_machine('dew-drop.home', '192.168.1.69');
CALL add_machine('blade.home', '192.168.1.42');
CALL add_machine('router.home', '192.168.1.1');
CALL add_machine('', '192.168.1.12');
CALL add_machine('router.home', '192.168.1.100');
CALL add_machine('pi.hole', '192.168.1.140');

INSERT INTO cnames (cname, points_to) SELECT 'unicornscripts.com', id FROM dns_names WHERE dns_name = 'dew-drop.home';

-- INSERT INTO machines (ip) VALUES ('192.168.1.12');
INSERT INTO dns_names (dns_name) VALUES ('foobar');
-- SELECT * FROM dns_records;

CALL add_machine('foobar', '');


-- -- SELECT ip FROM machines;
-- SELECT * FROM machines;
-- SELECT * FROM dns_names;
-- -- SELECT * FROM cnames;
-- SELECT * FROM dns_records;

-- SELECT id FROM dns_records WHERE dns_name_uid IS NULL AND machine_uid = 3;

-- SELECT ip, dns_name, cname 
--     FROM machines 
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
--         FULL JOIN cnames ON cnames.points_to = dns_names.id;

CALL add_machine('foobar', '192.168.1.255');
CALL add_machine('foobar_2.electric_boogaloo', '192.168.1.12');

SELECT ip, dns_name, cname 
    FROM machines 
        FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
        FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
        FULL JOIN cnames ON cnames.points_to = dns_names.id;

-- SELECT id FROM machines WHERE (machines.ip = '192.168.1.12' AND '192.168.1.12' != '') OR (machines.ipv6 = '' AND '' != '') OR (machines.mac_adr = '' AND '' != '');


-- SELECT ip, dns_name
--     FROM machines 
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id;

-- SELECT DISTINCT ip, dns_name, cname 
--     FROM machines 
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
--         FULL JOIN cnames ON cnames.points_to = dns_names.id;

-- SELECT DISTINCT hosts.id, ip, dns_name, cname 
--     FROM hosts
--         FULL JOIN machines ON machines.id = hosts.machine_uid 
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
--         FULL JOIN cnames ON cnames.points_to = dns_names.id;

-- SELECT DISTINCT hosts.dns_name_uid
--     FROM hosts
--         FULL JOIN machines ON machines.id = hosts.machine_uid 
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
--         FULL JOIN cnames ON cnames.points_to = dns_names.id
--     WHERE hosts.id = 10;

-- SELECT machines.id
-- SELECT machine_uid, dns_name_uid, cname_uid, ip, ipv6, mac_adr, local_name, gateway_to, dns_name, cname 

-- SELECT machines.id, cname, ip, ipv6, mac_adr, dns_name--, hosts.*
--     FROM hosts
--         FULL JOIN machines ON machines.id = hosts.machine_uid
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
--         FULL JOIN cnames ON cnames.points_to = dns_names.id
--     -- WHERE cname = 'unicornscripts.com'
--     ORDER BY machines.id
-- ;

-- SELECT machines.id, cname, ip, dns_name, hosts.*
--     FROM hosts
--         FULL JOIN machines ON machines.id = hosts.machine_uid
--         FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
--         FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
--         FULL JOIN cnames ON cnames.points_to = dns_names.id
--     -- WHERE cname = 'unicornscripts.com'
--     ORDER BY hosts.id
-- ;

SELECT machines.id, cname, ip, dns_name, hosts.*
    FROM hosts
        FULL JOIN machines ON machines.id = hosts.machine_uid
        FULL JOIN dns_records ON dns_records.machine_uid = machines.id 
        FULL JOIN dns_names ON dns_records.dns_name_uid = dns_names.id
        FULL JOIN cnames ON cnames.points_to = dns_names.id
    -- WHERE cname = 'unicornscripts.com'
    ORDER BY hosts.id
;

SELECT * FROM machines;
-- SELECT * FROM dns_names;
-- SELECT * FROM cnames;
-- SELECT * FROM dns_records;
-- SELECT * FROM hosts;