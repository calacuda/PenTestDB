-- tables
CREATE TABLE dns_names (
    id serial PRIMARY KEY NOT NULL,
    dns_name varchar(255) DEFAULT ''
);

CREATE TABLE machines (
    id serial PRIMARY KEY NOT NULL,
    ip varchar(255) DEFAULT '',
    ipv6 varchar(255) DEFAULT '',
    mac_adr varchar(255) DEFAULT '',
    -- cname varchar(255) DEFAULT '',
    local_name varchar(255) DEFAULT '',
    gateway_to varchar(255) DEFAULT '', -- gateway to this box form the outside world  (useful for machines that require pivoting to get to.)
    dns_name_uid int references dns_names(id), -- varchar(255) DEFAULT '',
    constraint chk_null check (ip is not null or ipv6 is not null or mac_adr is not null or local_name is not null),
    UNIQUE (ip, ipv6, mac_adr)
    -- UNIQUE (ipv6),
    -- UNIQUE (ip)
    -- UNIQUE()
);

CREATE TABLE cnames (
    id serial PRIMARY KEY NOT NULL,
    cname int references dns_names(id),
    points_to int references dns_names(id)
);

CREATE TABLE ports (
    id serial PRIMARY KEY NOT NULL,
    machine_uid int references machines(id), -- INTEGER NOT NULL,
    port varchar(255) NOT NULL,
    -- FOREIGN KEY (machine_uid) REFERENCES machines(id)
    UNIQUE (port, machine_uid)
);

CREATE TABLE all_names (
    id serial PRIMARY KEY NOT NULL,
    machine_uid int references machines(id), -- INTEGER NOT NULL,
    dns_name_uid int references dns_names(id),
    UNIQUE (machine_uid, dns_name_uid)
);

-- functions
CREATE FUNCTION recurse_cname(dns_name_uid integer) 
RETURNS integer
AS $$
DECLARE next_uid int;
BEGIN
    IF EXISTS ( SELECT cname FROM cnames WHERE points_to = dns_name_uid )
    THEN
        SELECT cname INTO next_uid FROM cnames WHERE points_to = dns_name_uid;
        return recurse_cname(next_uid);
    ELSE
        RETURN dns_name_uid;
    END if;
END; $$
LANGUAGE plpgsql IMMUTABLE;

CREATE FUNCTION get_dns_name(dns_name_uid integer)
RETURNS varchar(255)
AS $$
DECLARE tmp_dns_name varchar(255);
BEGIN
    SELECT dns_name INTO tmp_dns_name FROM dns_names WHERE id = recurse_cname(dns_name_uid);

    RETURN tmp_dns_name;
END; $$
LANGUAGE plpgsql IMMUTABLE;

CREATE FUNCTION add_cname(dns_name_uid integer, machine_uid integer) 
RETURNS integer
AS $$
DECLARE next_uid int;
BEGIN
    INSERT INTO all_names (dns_name_uid, machine_uid) SELECT dns_name_uid, machines.id FROM machines WHERE id = machine_uid; -- ON CONFLICT DO NOTHING;
    IF EXISTS ( SELECT cname FROM cnames WHERE points_to = dns_name_uid )
    THEN
        SELECT cname INTO next_uid FROM cnames WHERE points_to = dns_name_uid;
        RETURN add_cname(next_uid, machine_uid);
    ELSE
        RETURN dns_name_uid;
    END if;
END; $$
LANGUAGE plpgsql;

CREATE FUNCTION get_machine(identifier varchar)
RETURNS varchar(255)
AS $$
DECLARE machine_uid varchar(255);
BEGIN
    -- SELECT dns_name_uid FROM machines WHERE id = recurse_cname(dns_name_uid);
    -- INSERT INTO all_names (dns_name, machine_uid) SELECT dns_names.id, machines.id FROM machines JOIN dns_names ON machines.dns_name_uid = dns_names.id;
    
    IF EXISTS ( SELECT id FROM machines WHERE ip = identifier OR ipv6 = identifier )
    THEN
        SELECT id INTO machine_uid FROM machines WHERE ip = identifier OR ipv6 = identifier;
        RETURN machine_uid;
    ELSE
        DELETE FROM all_names;
        PERFORM add_cname(machines.dns_name_uid, machines.id) FROM machines;
        SELECT all_names.machine_uid INTO machine_uid FROM all_names JOIN dns_names ON all_names.dns_name_uid = dns_names.id WHERE dns_names.dns_name = identifier;
        RETURN machine_uid;
    END IF;

    -- RETURN tmp_dns_name;
END; $$
LANGUAGE plpgsql;


INSERT INTO dns_names (id, dns_name) VALUES (1, 'localhost');
INSERT INTO machines (id, ip, dns_name_uid) VALUES (1, '127.0.0.1', 1);
INSERT INTO dns_names (id, dns_name) VALUES (2, 'router.home');
INSERT INTO machines (id, ip, dns_name_uid) VALUES (2, '192.168.1.1', 2);
INSERT INTO dns_names (id, dns_name) VALUES (3, 'blade.home');
INSERT INTO machines (id, ip, dns_name_uid) VALUES (3, '192.168.1.42', 3);
-- INSERT INTO machines (id, ip, dns_name_uid, cname) VALUES (1, '127.0.0.1', 1, 'localhost');
-- INSERT INTO machines (id, ip, dns_name_uid, cname) VALUES (2, '0.0.0.0', 3, 'localhost');
-- INSERT INTO machines (id, ip, dns_name_uid, cname) VALUES (3, '192.168.1.1', 2, 'router');
-- INSERT INTO ports (id, port, machine_uid) VALUES (1, '80', 1);
-- INSERT INTO ports (id, port, machine_uid) VALUES (2, '443', 2);
-- INSERT INTO cnames (id, cname, points_to) VALUES (1, 3, 1);
-- INSERT INTO cnames (id, cname, points_to) VALUES (2, 2, 1);
INSERT INTO dns_names (id, dns_name) VALUES (4, 'unicornscripts.com');
INSERT INTO cnames (id, cname, points_to) VALUES (2, 4, 3);
