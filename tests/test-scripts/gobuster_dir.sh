function gobuster_dir_data {
    #################
    # gobuster data #
    #################
    echo "    [LOG] gobuster dir scan"
    echo "    >> gobuster dir -w $WORDLIST -u \"http://$TARGET_IP:8888\""
    # gobuster_out=$( gobuster dir -w $WORDLIST -u "http://$TARGET_IP:8888" )  #  2>&1
    # ec=$?
    # echo "$gobuster_out"
    echo -n "    "
    gobuster dir -w $WORDLIST -u "http://$TARGET_IP:8888" | target/debug/ptdb parse --exit-status "$?" --command "gobuster dir -w $WORDLIST -u http://$TARGET_IP:8888"
}

function gobuster_dir_test {
    ################
    # web_dir test #
    ################

    # echo "    [LOG] checking GOBUSTER webdirs"
    cmd_uid=$( target/debug/ptdb query -q "SELECT id FROM commands WHERE command = 'gobuster dir -w $WORDLIST -u http://$TARGET_IP:8888';" | head -n 3 | tail -n 1 )
    echo "cmd_uid => $cmd_uid" 1>&2
    # target/debug/ptdb query -q "SELECT url FROM web_dirs;" 1>&2
    # target/debug/ptdb query -q "SELECT dir, url, base_url, res_code, web_protocol, method, num_chars  FROM web_dirs JOIN commands ON commands.id = web_dirs.command_uid where commands.id = $cmd_uid ORDER BY dir ASC;" 1>&2
    target/debug/ptdb query -q "SELECT dir, url, base_url, res_code, web_protocol, method, num_chars  FROM web_dirs JOIN commands ON commands.id = web_dirs.command_uid where commands.id = $cmd_uid ORDER BY dir ASC;" | sort > gobuster-db-query.txt  # ./tests/db-output/gobuster-sql.txt  #  
    
    if [[ $( diff -adEw ./tests/db-output/gobuster-sql.txt gobuster-db-query.txt ) ]]; then
        echo -e '\a' 1>&2
        echo ">> diff -adEw ./tests/db-output/gobuster-sql.txt gobuster-db-query.txt" 1>&2
        diff -adEw ./tests/db-output/gobuster-sql.txt gobuster-db-query.txt 1>&2
        echo "[LOG] GOBUSTER test FAILED"
       exit 1
    else 
        echo "[LOG] GOBUSTER test PASSED"
        exit 0
    fi
}