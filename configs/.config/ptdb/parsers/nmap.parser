#!/usr/bin/python

import sys
import re



stdin = sys.stdin
host_re = "([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})"
ports_re = "([0-9]{1,5})/(tcp|udp)[\s]+(open|filtered|closed)[\s]+(?=\S*['-]*)([a-zA-Z'-]+)(.*$)"
nul = chr(0)
regexs = [host_re]


def get_host_lines(lines: list):
    host_nums = []
    for i in range(len(lines)):
        if lines[i].startswith("Nmap scan report for "):
            host_nums.append(i)


    return host_nums


def hosts_reports(lines, line_nums):
    # print(f"{lines=}")
    reports = []
    for i, l_num in zip(range(len(line_nums)), line_nums):
        if len(line_nums) - i > 1:
            reports.append(lines[l_num:line_nums[i+1]])
        elif len(line_nums) - i <= 1:
            reports.append(lines[l_num:])

    return reports


def get_ip(host):
    # print(host)
    ip = ""
    for line in host:
        m = re.search(host_re, line)
        if m:
            ip = m.group()
            break

    # print(f"{ip=}")
    return ip


def get_ports(host):
    ports = []
    for line in host:
        m = re.search(ports_re, line)
        if m:
            p_dat = {}
            p_dat["number"] = m.group(1).strip()
            p_dat["protocol"] = m.group(2).strip()
            p_dat["state"] = m.group(3).strip()
            p_dat["service"] = m.group(4).strip()
            try:
                p_dat["verison"] = m.group(5).strip()
                # print(m.group(5).strip())
            except IndexError as e:
                pass

            ports.append(p_dat)
            # ports[m.group(1)] = p_dat

    return ports


def get_domain(lines):
    begining = "Nmap scan report for "
    for i in range(len(lines)):
        if lines[i].startswith(begining):
            rest = lines[i][len(begining):]
            name = rest.split(' ')[0]
            if not name.endswith('\n'):
                return name


def parse_host(host):
    ip = get_ip(host)
    # print(ip)
    ports = get_ports(host)
    domain = get_domain(host)
    return {"ip": ip, "ports": ports} if not domain else {"ip": ip, "ports": ports, "url": domain}


def output(hosts, cmd, full_report):
    print(f"TABLE{nul}scans")
    print(f"command{nul}{cmd}")
    results = ''.join(full_report).replace('\n', '\\n')
    print(f"stdio{nul}{results}")

    for host in hosts:
        print(f"TABLE{nul}hosts")
        print(f"ip{nul}{host.get('ip')}")
        if host.get("url"):
            print(f"url{nul}{host.get('url')}")
        for port in host.get("ports"):
            print(f"TABLE{nul}ports")
            print(f"number{nul}{port.get('port')}")
            print(f"state{nul}{port.get('state')}")
            print(f"protocol{nul}{port.get('protocol')}")
            print(f"service{nul}{port.get('service')}")
            if port.get("version"):
                print(f"port{nul}{port.get('version')}")


def main():
    full_report = stdin.readlines()
    # print("".join(full_report))
    cmd = full_report[0].strip()
    line_nums = get_host_lines(full_report)
    reports = hosts_reports(full_report, line_nums)

    hosts = []
    for host in reports:
        report = parse_host(host)
        # report["cmd"] = cmd

        hosts.append(report)


    output(hosts, cmd, full_report)


main()
