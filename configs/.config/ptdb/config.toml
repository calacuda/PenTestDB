engagement_conf = "engagement.toml"
common_id = ["ip", "ipv6", "dns_name"]
template_db = "ptdb-template"

[targets]
ports = "FROM ports JOIN hosts ON hosts.id = ports.host JOIN commands ON ports.command = commands.id"

[sql_tables]
ip = "hosts"
ipv6 = "hosts"
dns_name = "hosts"
local_name = "hosts"
gateway_to = "hosts"
gateway_from = "hosts"
port = "ports"
TL_protocol = "ports"
service = "ports"
version = "ports"
state = "ports"
web_protocol = "web_dirs"
res_code = "web_dirs"
base_url = "web_dirs"
url = "web_dirs"
method = "web_dirs"
redirect_adr = "web_dirs"
dir = "web_dirs"
num_chars = "web_dirs"
cmd = "commands"
output = "commands"
hash_file = "creds"
wordlist = "creds"
username = "creds"
password = "creds"
domain = "creds"

[overlap]
hosts = "ip OR ipv6 OR dns_name OR local_name"
ports = "host AND port AND TL_protocol"
web_dirs = "host AND base_url AND url OR base_url" # (host AND base_url) AND (url OR base_url)
creds = "host AND username AND password AND domain"

[sql]
host = "/run/postgresql/"  # "localhost"
user = "postgres"
# passwd = "super_secret_password" # only needed if you dont have passwordless auth on the database.
port = "5432"
ssl = false
cert = "/path/to/ca_cert_file.cert"
null_val = "''"

# config file for all PenTestDB commands
[server]
socket = "/tmp/ptdb/server"
local_mode = true
ssh_mode = true
ftp_mode = true

[[parsers.feroxbuster]]
parser = "feroxbuster.py"

[[parsers.rustscan]]
parser = "rustscan.py"

[[parsers.gobuster]]
parser = "gobuster.py"
args = [["dir"]]

# [[parsers.searchsploit]]
# parser = "searchsploit.py"

[[parsers.john]]
parser = "john.py"

[[parsers.john]]
parser = "john_show.py"
args = [['--show']]

[[parsers.hydra]]
parser = "save_output.py"

[[parsers.nmap]]
parser = "base_nmap.py"

# [[parsers.cat]]
# parser = "nmap/base-nmap.parser"
# parser = "rustscan.py"
# parser = "feroxbuster.py"
# parser = "gobuster.py"

[[parsers.nmap]]
# each sub-array in args is one set of arguments, ALL of which must be present,
# OR ALL of any other sub-list muct be present, for this parser to be used to.
# so this parser will be used, ONLY if the user call nmap, AND either `--script=vuln`
# is on of the args to Nmap, or if both `--script` and `vuln` are both present
# in the args list.
#
# to put it in quazi-math syntaxt:
# args[0][0] AND ... AND args[0][n] OR ... OR args[k][0] AND ... AND args[k][n]
args = [['--script=vuln'],
        ['--script', 'vuln']]
parser = "nmap/nmap-vuln.parser"
