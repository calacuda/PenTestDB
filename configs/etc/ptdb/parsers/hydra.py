#!/usr/bin/python
"""
hydra-parser.py

parser for hydra commands.


Author: Calacuda | MIT License | Epoch: Oct 6, 2022
"""


from sys import stdin
import re


ipv4_re = "^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})?"
ipv6_re = "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))?"
nul = chr(0)


def parse_line(line):
    toks = [tok.strip() for tok in line.split(" ") if tok]
    domain = "web" if "http" in toks[0].split("][")[1][:-1].lower() else toks[0].split("][")[1][:-1].lower()
    if re.match(ipv4_re, toks[2]):
        id_type = "ip"    
    elif re.match(ipv6_re, toks[2]):
        id_type = "ipv6"
    else:
        id_type = "dns_name"
    
    return zip(["domain", id_type, "username", "password"], (domain, toks[2], toks[4], toks[6]))
    # return (zip(["domain", id_type, "username", "password"], (domain, toks[2], toks[4], toks[6])), zip([id_type], [toks[2]]))


def main(full_report):
    credentials = []

    for line in full_report:
        if line[0] == "[" and line[1].isnumeric():
            data_pairs = parse_line(line)
            # data_pairs, hosts = parse_line(line)
            credentials.append(data_pairs)
            # credentials.append(hosts)

    # print([thing for thing in credentials[0]])
    return "\n".join([nul.join([f"{name}{nul}'{val}'" for (name, val) in cred]) for cred in credentials])

if __name__ == "__main__":
    print(main(stdin.readlines()), end="")