#!/usr/bin/python3
"""
feroxbuster-parser.py

parser for feroxbuster.


Author: Calacuda | MIT Licence | Epoch: Jul 30, 2022
"""

import sys
import re



stdin = sys.stdin
code = "([0-9]{1,3})[\s]+(GET|POST)[\s]+"
nul = chr(0)


def get_target(lines):
    start = " ðŸŽ¯  Target Url            â”‚ "
    for line in lines:
        if line.startswith(start):
            return line.split('â”‚ ')[1].strip()


def parse_lines(lines, target_url):
    host = target_url.split('/')[2].strip()
    # print(host)
    protocol = target_url.split(':')[0].strip()
    # print(protocol)
    base = f"dns_name{nul}'{host}'{nul}web_protocol{nul}'{protocol}'{nul}base_url{nul}'{target_url}'{nul}"
    final = ""
    for line in lines:
        m = re.search(code, line)
        if m:
            info = [word.strip() for word in line.split(' ') if word ]
            res_code = info[0].strip()
            method = info[1].strip()
            url = info[-1].strip()
            web_dir = url.replace(target_url, "")
            final += f"{base}res_code{nul}'{res_code}'{nul}method{nul}'{method}'{nul}url{nul}'{url}'{nul}dir{nul}'{web_dir}'\n"


    print(final[0:-1], end='')


def main():
    full_scan = stdin.readlines()
    # print("".join(full_report))
    cmd = full_scan[0].strip()
    # print("CMD => ", cmd)
    full_report = full_scan[1:]
    target = get_target(full_scan)

    if not target:
        return
    
    target = target if target[-1] != "/" else target[:-1]
    parse_lines(full_scan, target)
    # output(ports)


main()
